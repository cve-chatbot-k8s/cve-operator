pipeline {
    agent any
      tools {
        nodejs "node"
      }
    environment {
        DOCKER_IMAGE_NAME = 'girish332/cve-operator'
        LATEST_TAG = 'latest'
    }
    stages {
        stage('Checkout Code') {
            steps {
                cleanWs()
                checkout scm
            }
        }

        stage ('Release with Semantic Versioning') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-app', passwordVariable: 'GITHUB_TOKEN', usernameVariable: 'GITHUB_USERNAME')]) {
                    sh '''
                        npm install @semantic-release/commit-analyzer
                        npm install @semantic-release/release-notes-generator
                        npm install @semantic-release/changelog
                        npm install semantic-release-helm
                        npm install @semantic-release/git
                        npm install @semantic-release/github
                        export GITHUB_ACTION=true
                        npx semantic-release
                    '''
                }
            }
        }

        stage('Build and Push webapp Docker Operator Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub-creds') {
                        sh '''
                            docker buildx ls
                            docker buildx create --name cve-consumer
                            docker buildx use cve-consumer
                            VERSION=$(git describe --tags)
                            docker buildx build --push --platform linux/amd64,linux/arm64 --tag $DOCKER_IMAGE_NAME:$VERSION --tag $DOCKER_IMAGE_NAME:latest .
                        '''
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
            echo 'Pipeline complete'
        }
    }
}
